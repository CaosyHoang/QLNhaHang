/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views.member;

import dao.MenuItem;
import dao.Order;
import dao.OrderDetail;
import dao.UserLogin;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import services.MenuItemService;
import services.OrderService;

public class AddOrderFrame extends javax.swing.JFrame {

    /**
     * Creates new form AddUserFrame
     */
    public AddOrderFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbMenuItem = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ĐẶT MÓN");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Danh sách món ăn");

        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jButton2.setText("Đóng");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tbMenuItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "ID", "Tên món ăn", "Thể loại", "Giá bán", "Mô tả", "Tình trạng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbMenuItem.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tbMenuItem.getTableHeader().setResizingAllowed(false);
        tbMenuItem.getTableHeader().setReorderingAllowed(false);
        tbMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbMenuItemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbMenuItem);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 69, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 880, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(437, 437, 437)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(339, 339, 339)
                        .addComponent(btnAdd)
                        .addGap(199, 199, 199)
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(btnAdd))
                .addGap(20, 20, 20))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        OrdersManagement semesterManagement = new OrdersManagement();
        semesterManagement.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tableModel = (DefaultTableModel) tbMenuItem.getModel();
        int[] selectedRows = tbMenuItem.getSelectedRows();
        float sum = 0;
        for (int rowIndex : selectedRows) {
            Vector<Object> menuItemVector = (Vector<Object>) tableModel.getDataVector().elementAt(rowIndex);
            MenuItem menuItem = new MenuItem();
            menuItem.setItemId(Integer.valueOf(menuItemVector.get(1).toString()));
            menuItem.setName(menuItemVector.get(2).toString());
            menuItem.setCategory(menuItemVector.get(3).toString());
            float price = Float.parseFloat(menuItemVector.get(4).toString());
            menuItem.setPrice(price);
            sum += price;
            menuItem.setDescription(menuItemVector.get(5).toString());
            menuItem.setAvailable((byte) (menuItemVector.get(6).toString().equals("Còn món") ? 1 : 0));
            menuItems.add(menuItem);
        }
        if (menuItems != null) {
            Order order = new Order();
            LocalDateTime currentDateTime = LocalDateTime.now();
            Timestamp timestamp = Timestamp.valueOf(currentDateTime);
            java.sql.Date sqlDate = new java.sql.Date(timestamp.getTime());
            order.setOrderTime(sqlDate);
            order.setStatus("Đang chờ duyệt");
            order.setAccountId(UserLogin.getAccountId());
            order.setPrice(sum);
            Integer orderId = orderService.createOrder(order).getOrderId();
            if (orderId != null) {
                order.setOrderId(orderId);
            } else {
                JOptionPane.showConfirmDialog(null, "Tạo đơn thất bại", "Tạo đơn", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                return;
            }
            for (int i = 0; i < menuItems.size(); i++) {
                MenuItem menuItem = menuItems.get(i);
                OrderDetail OrderDetail = new OrderDetail();
                OrderDetail.setQuantity(1);
                OrderDetail.setOrderId(order.getOrderId());
                OrderDetail.setItemId(menuItem.getItemId());
                if (!orderService.createOrderDetail(OrderDetail)) {
                    JOptionPane.showConfirmDialog(null, "Tạo đơn thất bại", "Tạo đơn", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            int responseStatus = JOptionPane.showConfirmDialog(null, "Tạo đơn thành công", "Tạo đơn", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
            if (responseStatus == JOptionPane.OK_OPTION) {
                this.dispose();
                OrdersManagement ordersManagement = new OrdersManagement();
                ordersManagement.setVisible(true);
            }
            menuItems = null;
        } else {
            JOptionPane.showConfirmDialog(null, "Bạn chưa chọn món", "Tạo đơn", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        try {
            tbMenuItem.removeColumn(tbMenuItem.getColumnModel().getColumn(5));
        } catch (Exception e) {
        }
        List<MenuItem> menuItems = menuItemService.getAllMenuItems();

        DefaultTableModel model = (DefaultTableModel) tbMenuItem.getModel();
        model.setRowCount(0);
        for (int i = 0; i < menuItems.size(); i++) {
            MenuItem item = menuItems.get(i);
            model.addRow(new Object[]{i + 1, item.getItemId(), item.getName(), item.getCategory(), item.getPrice(),
                item.getDescription(), (item.getAvailable() == 1 ? "Còn món" : "Hết món")});
        }
    }//GEN-LAST:event_formWindowOpened

    private void tbMenuItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbMenuItemMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tbMenuItemMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddOrderFrame().setVisible(true);
            }
        });
    }

    private final OrderService orderService = new OrderService();
    private final MenuItemService menuItemService = new MenuItemService();
    List<MenuItem> menuItems = new LinkedList<>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbMenuItem;
    // End of variables declaration//GEN-END:variables
}
